# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
#MySQL
spring.datasource.name=ftMYSQL
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://${db.host:localhost}/${db.database:chat}?useSSL=false&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=UTF-8&characterSetResults=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username = ${db.user:root}
spring.datasource.password = ${db.password:root}
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=${db.max-wait:60000}

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=${db.max-active:30}


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

#### Hibernate JPA Configuration ####
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.id.new_generator_mappings = false

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

